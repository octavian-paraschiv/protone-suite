<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TXT_INSTALL_ADDONLIB" xml:space="preserve">
    <value>Install addon library...</value>
  </data>
  <data name="TXT_INSTALLADDONFILTER" xml:space="preserve">
    <value>OPMedia Addon Libraries (*.dll)|*.dll||</value>
  </data>
  <data name="TXT_INSTALLADDONS" xml:space="preserve">
    <value>Select an OPMedia addon library to install:</value>
  </data>
  <data name="TXT_INVALID_ADDON" xml:space="preserve">
    <value>The DLL file you have selected is not a valid OPMedia extension library.
Note: If you believe, however, that the respective file should have been a valid extension, 
you are advised to contact the producer or the supplier of this DLL.</value>
  </data>
  <data name="TXT_ADDON_NAME" xml:space="preserve">
    <value>Addon Name</value>
  </data>
  <data name="TXT_S_ADDON_SETTINGS" xml:space="preserve">
    <value>Config</value>
  </data>
  <data name="TXT_ADDONS_CHANGED_RESTART" xml:space="preserve">
    <value>In order to modify the new addons configuration, the program needs to be restarted.
Is it OK to restart now ?</value>
  </data>
  <data name="TXT_ADDONS_NOT_CHANGED" xml:space="preserve">
    <value>Since you have canceled the restart,  your add-on configuration will not be changed.</value>
  </data>
  <data name="TXT_S_ADDONSETTINGS" xml:space="preserve">
    <value>Addons</value>
  </data>
  <data name="TXT_ADDONSLIST" xml:space="preserve">
    <value>Checked addons are currently enabled. Use the checkboxes to enable/disable addons. Addons marked with 
asterisk (*) are required and cannot be disabled. A program restart will be needed to apply the new addons
configuration.</value>
  </data>
  <data name="TXT_ADDONSLIST_NORESTART" xml:space="preserve">
    <value>Checked addons are currently enabled. Use the checkboxes to enable/disable addons. Addons marked with 
asterisk (*) are required and cannot be disabled. </value>
  </data>
  <data name="TXT_CANT_INSTALL_BUILTIN" xml:space="preserve">
    <value>The library you have selected cannot be installed, because it is a native library. 
A native library encaspulates the core functionality of an extensible application, and it cannot be installed or uninstalled.</value>
  </data>
  <data name="TXT_CANT_UNINSTALL_BUILTIN" xml:space="preserve">
    <value>The library you have selected cannot be uninstalled, because it is a native library. 
A native library encaspulates the core functionality of an extensible application, and it cannot be installed or uninstalled.
Instead of uninstalling, consider using the addons checkboxes to enable or disable various application functionalities. 
Caution: some functionalities are required and cannot be disabled.</value>
  </data>
  <data name="TXT_INVALID_NAME" xml:space="preserve">
    <value>The DLL file you have selected is not a valid OPMedia extension library.
A valid OPMedia extension library should follow the naming convention: &lt;Library-Name&gt;Extension.dll.</value>
  </data>
  <data name="TXT_NAV_ADDONS" xml:space="preserve">
    <value>Navigation</value>
  </data>
  <data name="TXT_PREVIEW_ADDONS" xml:space="preserve">
    <value>Preview / Visualization</value>
  </data>
  <data name="TXT_PROP_ADDONS" xml:space="preserve">
    <value>File Property Interaction</value>
  </data>
  <data name="TXT_SHAREDADDONS" xml:space="preserve">
    <value>The addon library you are trying to uninstall provides multiple features:

{0}

If you continue, all these features will no longer be available. Is it OK to proceed ?</value>
  </data>
  <data name="TXT_NO_NAV_ADDONS" xml:space="preserve">
    <value>No navigation addons are currently configured. The application cannot run without them.
You must to select and enable at least one navigation addon in order to continue.</value>
  </data>
  <data name="TXT_NOTIFY_NON_PREVIEW" xml:space="preserve">
    <value>The selected item cannot be previewed. 
You must use an external program to view it.</value>
  </data>
  <data name="TXT_NOTIFY_PREVIEW" xml:space="preserve">
    <value>To preview the selected item, double click it or press Enter.</value>
  </data>
  <data name="TXT_PREPARE_PREVIEW" xml:space="preserve">
    <value>Automatic preview of selected item is starting in a couple of seconds. 
Press Escape to cancel ...</value>
  </data>
  <data name="TXT_PREVIEW_CANCELED" xml:space="preserve">
    <value>Automatic preview of selected item has been canceled. 
Select another item or press Enter to preview the current item.</value>
  </data>
  <data name="TXT_SELECTALLADDONS" xml:space="preserve">
    <value>Select all addons</value>
  </data>
  <data name="TXT_UNINSTALL_ADDONLIB" xml:space="preserve">
    <value>Uninstall addon library...</value>
  </data>
</root>