<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="mp3EncoderSettings1.Mp3ConversionOptions" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAE5PUE1lZGlhLlJ1bnRpbWUuUHJvVE9ORSwgVmVyc2lvbj0yLjEu
        NC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwFAQAAADJPUE1lZGlhLlJ1bnRp
        bWUuUHJvVE9ORS5Db21wcmVzc2lvbi5MYW1lLkJFX0NPTkZJRwIAAAAIZHdDb25maWcGZm9ybWF0AAQP
        LU9QTWVkaWEuUnVudGltZS5Qcm9UT05FLkNvbXByZXNzaW9uLkxhbWUuTEhWMQIAAAACAAAAAAEAAAX9
        ////LU9QTWVkaWEuUnVudGltZS5Qcm9UT05FLkNvbXByZXNzaW9uLkxhbWUuTEhWMRcAAAAPZHdTdHJ1
        Y3RWZXJzaW9uDGR3U3RydWN0U2l6ZQxkd1NhbXBsZVJhdGUOZHdSZVNhbXBsZVJhdGUFbk1vZGUJZHdC
        aXRyYXRlDGR3TWF4Qml0cmF0ZQduUHJlc2V0DWR3TXBlZ1ZlcnNpb24KZHdQc3lNb2RlbApkd0VtcGhh
        c2lzCGJQcml2YXRlBGJDUkMKYkNvcHlyaWdodAliT3JpZ2luYWwPYldyaXRlVkJSSGVhZGVyCmJFbmFi
        bGVWQlILblZCUlF1YWxpdHkMZHdWYnJBYnJfYnBzCm5WYnJNZXRob2QGYk5vUmVzCmJTdHJpY3RJc28I
        blF1YWxpdHkAAAAABAAABAAAAAAAAAAAAAAABAAAAA8PDw8xT1BNZWRpYS5SdW50aW1lLlByb1RPTkUu
        Q29tcHJlc3Npb24uTGFtZS5NcGVnTW9kZQIAAAAPDzxPUE1lZGlhLlJ1bnRpbWUuUHJvVE9ORS5Db21w
        cmVzc2lvbi5MYW1lLkxBTUVfUVVBTElUWV9QUkVTRVQCAAAADw8PCAgICAgICA8yT1BNZWRpYS5SdW50
        aW1lLlByb1RPTkUuQ29tcHJlc3Npb24uTGFtZS5WQlJNRVRIT0QCAAAACAgOAgAAAAEAAABMAQAARKwA
        AAAAAAAF/P///zFPUE1lZGlhLlJ1bnRpbWUuUHJvVE9ORS5Db21wcmVzc2lvbi5MYW1lLk1wZWdNb2Rl
        AQAAAAd2YWx1ZV9fAA8CAAAAAAAAAMAAAAAAAAAABfv///88T1BNZWRpYS5SdW50aW1lLlByb1RPTkUu
        Q29tcHJlc3Npb24uTGFtZS5MQU1FX1FVQUxJVFlfUFJFU0VUAQAAAAd2YWx1ZV9fAAgCAAAAAAAAAAEA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAABfr///8yT1BNZWRpYS5SdW50
        aW1lLlByb1RPTkUuQ29tcHJlc3Npb24uTGFtZS5WQlJNRVRIT0QBAAAAB3ZhbHVlX18ACAIAAAD/////
        AAAAAAAAAAAAAAs=
</value>
  </data>
</root>