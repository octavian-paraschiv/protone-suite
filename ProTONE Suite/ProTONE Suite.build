<?xml version="1.0"?>
<project name="ProTONE Suite" default="build" basedir=".">
    <description>ProTONE Suite</description>

    <property name="scm-user" value="octavian-paraschiv" />
    <property name="scm-pass" value="xTG23fc@" />

    <property name="debug" value="true" overwrite="false" />
    <property name="dotnet40.framework.dir" value="c:\windows\microsoft.net\framework\v4.0.30319" />
    <property name="msbuild40.executable" value="c:\windows\microsoft.net\framework\v4.0.30319\msbuild.exe" />
    <property name="istool.executable" value="c:\Program Files (x86)\ISTool\istool.exe" />
    <property name="root" value="." />
    
    <!-- GIT binary folder -->
    <property name="git.dir" value="c:\Program Files (x86)\Git\bin\" />

    <target name="build" description="Rebuild ProTONE Suite">
        <loadtasks assembly="f:\Programs\nantcontrib-0.92\bin\NAnt.Contrib.Tasks.dll" />

        <echo message=" BUILD STARTED !!" />

        <call target="cleanup" />
        <call target="ScmCheckout" />
        <call target="VersionInfoUpdate" />
        <call target="BuildVSSolution" />
        <call target="BuildInstaller" />
        <call target="BuildSDKInstaller" />
        <call target="PostBuildResults" />

        <echo message=" BUILD DONE !!" />

    </target>


    <target name="cleanup">
        <!-- Delete folders -->
        <echo message="Source code cleanup ..." />
        <delete dir="${root}\src" failonerror="false" />
        <echo message="Source code cleanup done" />
    </target>




    <target name="ScmCheckout">
        <!-- ReGet files from GITHUB -->
        <echo message="Fetching source code from GITHUB ..." />
        <exec program="${git.dir}git.exe">
            <arg value="pull" />
            <arg value="origin" />
            <arg value="master" />
        </exec>
        
        <echo message="Fetching source code from GITHUB: done" />
    </target>



    <target name="VersionInfoUpdate">
        <!-- Version info increment -->
        <iniread property="oldversion" filename="${root}\Versions_build.txt" section="ProTONE Suite" key="Version" default="2.1.0" />
        <property name="oldversion.build" value="${string::substring(oldversion, 4, string::get-length(oldversion) - 4)}" />
        <property name="newversion.build" value="${int::parse(oldversion.build) + 1}" />
        <property name="newversion" value="${string::substring(oldversion, 0, 4) + newversion.build}" />

        <echo message="Old version: ${oldversion}" />
        <echo message="New version: ${newversion}" />

        <loadfile file="${root}\src\Framework\OPMediaBase\OPMedia.Core\VersionTemplate.cs" property="file.contents" />
        <property name="file.contents" value="${string::replace(file.contents, 'VERSION', newversion)}" />

        <echo message="${file.contents}" file="${root}\src\Framework\OPMediaBase\OPMedia.Core\Version.cs" />

    </target>

    <target name="BuildVSSolution">
        <!-- Build solution -->
        <echo message="Building ProTONE Suite solution in VS2013 ..." />
        <exec
            program="${msbuild40.executable}"
            verbose="true"
            workingdir="${root}\src"
            commandline="/p:Configuration=Debug /t:Rebuild &quot;ProTONE Suite.sln&quot; /v:normal"
            />
    </target>

    <target name="BuildInstaller">
        <!-- Build installation -->
        <echo message="Building ProTONE Suite installer ..." />
        <exec
            program="${istool.executable}"
            workingdir="${root}\src\Installers"
            verbose="true">
            <arg value="-compile" />
            <arg value=".\ProtoneSuite.iss" />
        </exec>
    </target>

    <target name="BuildSDKInstaller">
        <!-- Build installation -->
        <echo message="Building OPMedia SDK installer ..." />
        <exec
            program="${istool.executable}"
            workingdir="${root}\src\Installers"
            verbose="true">
            <arg value="-compile" />
            <arg value=".\OPMediaSDK.iss" />
        </exec>
    </target>

    <target name="PostBuildResults">
        <!-- Post build results -->
        <echo message="Upload build results to GITHUB (TODO) ..." />

        <!-- TODO publish new Protone Suite version -->        

        <!-- TODO delete old Protone Suite version -->        

        <!-- TODO publish new opmedia SDK version -->        

        <!-- TODO delete old opmedia SDK version -->        

        <iniwrite filename="${root}\Versions_build.txt" section="ProTONE Suite" key="Version" value="${newversion}" />

        <!-- TODO commit and push -->        

    </target>

</project>
